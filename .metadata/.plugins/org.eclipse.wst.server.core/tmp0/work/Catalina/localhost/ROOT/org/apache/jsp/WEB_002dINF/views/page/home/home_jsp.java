/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.13
 * Generated at: 2019-09-24 05:49:01 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.page.home;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/ourTownBus/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ourTownBus/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1499215912100L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("<title>우리 동네 버스</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- header -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/iHead.jsp", out, false);
      out.write("\r\n");
      out.write("<!-- header -->\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(document).ready(function(){\r\n");
      out.write("\t$(\"#bus_input\").focus();\r\n");
      out.write("\tutil.getNowTime();\r\n");
      out.write("\t// 내 주변정류소 찾기\r\n");
      out.write("\t$(\"#locationBubStop\").on(\"click\",function(){\r\n");
      out.write("\t\tvar  tmY=\"\";\r\n");
      out.write("\t\tvar  tmX=\"\";\r\n");
      out.write("\t\tvar result = confirm('주변 정류소를 찾으시겠습니까?( 300M기준 )');\r\n");
      out.write("\t\tif(result) {\r\n");
      out.write("\t\t\ttmX = $(\"#tmx\").val();\r\n");
      out.write("\t\t\ttmY = $(\"#tmy\").val();\r\n");
      out.write("\t\t\tlocation.href=\"./locationBusStop?tmx=\"+tmX+\"&tmy=\"+tmY;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\telse{}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("\t$(\"#btn-weather\").on(\"click\",function(){ weather.getWeatherDataSeaven();});\r\n");
      out.write("\t$(\"#bus_input\").on(\"keyup\",function(){\r\n");
      out.write("\t\tvar busInput = $(this); var bus_val = busInput.val();\r\n");
      out.write("\t\tif(bus_val == \"\" || bus_val == null){ return false; }\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl:\"./relationKeyword\",\r\n");
      out.write("\t\t\tdata:{ keyword : bus_val },\r\n");
      out.write("\t\t\tsuccess : function(data){ $(\"#relationKeyword\").html(data); },\r\n");
      out.write("\t\t\terror : function(a, b, c){}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("<div class=\"row\">\r\n");
      out.write("\t<div class=\"col-xs-12 col-sm-12 col-md-12\">\r\n");
      out.write("\t\t<div id=\"myCarousel\" class=\"col-xs-12 col-sm-12 col-md-12 carousel slide\" data-ride=\"carousel\">\r\n");
      out.write("\t\t  <ol class=\"carousel-indicators\">\r\n");
      out.write("\t\t    <li data-target=\"#myCarousel\" data-slide-to=\"0\" class=\"active\"></li>\r\n");
      out.write("\t\t    <li data-target=\"#myCarousel\" data-slide-to=\"1\"></li>\r\n");
      out.write("\t\t    <li data-target=\"#myCarousel\" data-slide-to=\"2\"></li>\r\n");
      out.write("\t\t  </ol>\r\n");
      out.write("\t\t  보여지는 사진목록\r\n");
      out.write("\t\t  <div class=\"carousel-inner\">\r\n");
      out.write("\t\t    <div class=\"item active\"><img class=\"center-block\" src=\"./resources/img/bus/images.jpg\"></div>\r\n");
      out.write("\t\t    <div class=\"item\"><img class=\"center-block\" src=\"./resources/img/bus/images (1).jpg\"></div>\r\n");
      out.write("\t\t    <div class=\"item\"><img class=\"center-block\" src=\"./resources/img/bus/images (2).jpg\"></div>\r\n");
      out.write("\t\t  </div>\r\n");
      out.write("\t\t  왼쪽 오른쪽 controls\r\n");
      out.write("\t\t  <a class=\"left carousel-control\" href=\"#myCarousel\" data-slide=\"prev\">\r\n");
      out.write("\t\t    <span class=\"glyphicon glyphicon-chevron-left\"></span>\r\n");
      out.write("\t\t    <span class=\"sr-only\">Previous</span>\r\n");
      out.write("\t\t  </a>\r\n");
      out.write("\t\t  <a class=\"right carousel-control\" href=\"#myCarousel\" data-slide=\"next\">\r\n");
      out.write("\t\t    <span class=\"glyphicon glyphicon-chevron-right\"></span>\r\n");
      out.write("\t\t    <span class=\"sr-only\">Next</span>\r\n");
      out.write("\t\t  </a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("캐러셀 잠시보류\r\n");
      out.write(" -->\r\n");
      out.write("\r\n");
      out.write("<div id=\"content\">\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t<div class=\"row\">\r\n");
      out.write("\t<input type=\"hidden\" id=\"tmy\"/>\r\n");
      out.write("\t<input type=\"hidden\" id=\"tmx\"/>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 날씨영역 -->\r\n");
      out.write("\t<div class=\"col-xs-12 col-sm-12 col-md-offset-1 col-md-10 col-md-offset-1 weather_line Box\">\r\n");
      out.write("\t\t<div class=\"col-md-3 col-md-offset-2\">\r\n");
      out.write("\t\t\t<span id=\"btn-weather\" class=\"font_godic\" style=\"font-size: 14pt; cursor:pointer;\"><img style=\"width: 90px;\" src=\"./resources/img/weather/Weather.png\"/>날씨정보</span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"col-xs-12 col-sm-12 col-md-12\">\r\n");
      out.write("\t\t<div class=\"col-md-4\"></div>\r\n");
      out.write("\t\t<div class=\"col-md-4 weather_Box\">\r\n");
      out.write("\t\t\t<div class=\"col-md-12\" id=\"weatherImg\" style=\"min-width: 250px; min-height: 50px;\"></div>\r\n");
      out.write("\t\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-12\" style=\"min-width: 250px; color:#58ACFA; min-height: 50px; border-top: 1px solid white;\">\r\n");
      out.write("\t\t\t\t<ul class=\"list-inline font_godic text-center\" style=\"color: white; width: 100%; margin-top: 3px;\">\r\n");
      out.write("\t\t\t\t\t<li style=\"width: 30%\"><img src=\"./resources/img/weather/icon/vec.png\"/></li>\r\n");
      out.write("\t\t\t\t\t<li style=\"width: 30%\"><img src=\"./resources/img/weather/icon/pop.png\"/></li>\r\n");
      out.write("\t\t\t\t\t<li style=\"width: 30%\"><img src=\"./resources/img/weather/icon/cloud.png\"/></li>\r\n");
      out.write("\t\t\t\t</ul>\r\n");
      out.write("\t\t\t\t<ul class=\"list-inline font_godic text-center\" style=\"color: white;\">\r\n");
      out.write("\t\t\t\t\t<li style=\"width: 30%\" id=\"vec\"></li>\r\n");
      out.write("\t\t\t\t\t<li style=\"width: 30%\" id=\"pop\"></li>\r\n");
      out.write("\t\t\t\t\t<li style=\"width: 30%\" id=\"reh\"><img src=\"./resources/img/weather/icon/vec.png\"/></li>\r\n");
      out.write("\t\t\t\t</ul>\t\t\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"col-md-4\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- 날씨영역 -->\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 검색영역 -->\r\n");
      out.write("\t<div class=\"col-xs-12 col-sm-12 col-md-offset-1 col-md-10 col-md-offset-1 bus_line Box\">\r\n");
      out.write("\t\t<div class=\"col-md-3 col-md-offset-2\">\r\n");
      out.write("\t\t\t<span class=\"font_godic\" style=\"font-size: 14pt;\"><img style=\"width: 90px\" src=\"./resources/img/bus/Bus-logo.svg.png\"/>버스정보</span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class=\"col-md-offset-2 col-md-8 col-md-offset-2\">\r\n");
      out.write("            <div class=\"input-group stylish-input-group bus_searchLine\">\r\n");
      out.write("                <input type=\"text\" class=\"form-control bus_searchLine\" id=\"bus_input\" placeholder=\"정류소 명, 정류소ID...\" >\r\n");
      out.write("                <span class=\"input-group-addon\">\r\n");
      out.write("                    <button type=\"submit\">\r\n");
      out.write("                        <span class=\"glyphicon glyphicon-search\"></span>\r\n");
      out.write("                    </button>  \r\n");
      out.write("                </span>\r\n");
      out.write("                <span class=\"input-group-addon\"><button class=\"glyphicon glyphicon-map-marker\" id=\"locationBubStop\">주변정류소</button></span>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"row\" id=\"relationKeyword\"></div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- 검색영역 -->\r\n");
      out.write("\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- floor -->\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../include/iFloor.jsp", out, false);
      out.write("\r\n");
      out.write("\t<!-- floor -->\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 내주변 정류소 위치 찾기 -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../modal/modal_myLocationBusStop.jsp", out, false);
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
